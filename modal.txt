<!-- Modal Wrapper -->
        <div id="modal_wrapper">
            <!-- On Sale Modal -->
            <div class="modal fade" id="onSaleModal" tabindex="-1" aria-labelledby="onSaleModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="onSaleModalLabel">Apartment On Sale</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <p>Book your dream apartment now at a special discount!</p>
                            <form id="onSaleForm">
                                <div class="mb-3">
                                    <label for="onSaleName" class="form-label">Your Name</label>
                                    <input type="text" class="form-control" id="onSaleName"
                                        placeholder="Enter your name" required>
                                </div>
                                <div class="mb-3">
                                    <label for="onSalePhone" class="form-label">Phone Number</label>
                                    <input type="tel" class="form-control" id="onSalePhone"
                                        placeholder="Enter your phone number" required>
                                </div>
                                <div class="mb-3">
                                    <label for="onSaleEmail" class="form-label">Email address</label>
                                    <input type="email" class="form-control" id="onSaleEmail"
                                        placeholder="Enter your email" required>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">Submit</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Pre-Booked Modal -->
            <div class="modal fade" id="preBookedModal" tabindex="-1" aria-labelledby="preBookedModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="preBookedModalLabel">Buyer Information</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            <div id="buyerInfo">
                                <p><strong>Name:</strong> John Doe</p>
                                <p><strong>Phone:</strong> +1 234 567 890</p>
                                <p><strong>Email:</strong> johndoe@example.com</p>
                                <p><strong>Apartment No:</strong> APT-101</p>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>



================================================= js =================================================

let viewAll = false;
let allApartments = [];
let selectedFloor = "all";
let selectedRooms = [];
let selectedType = "all";
let sortField = null;
let sortDirection = "asc";

document.addEventListener("DOMContentLoaded", () => {
  fetch("https://ridwan4d.github.io/apartment_api/apartment_api.json")
    .then((response) => response.json())
    .then((data) => {
      allApartments = data;
      populateTable();
    })
    .catch((error) => console.error("Error fetching data:", error));

  // Floor filter
  document.getElementById("floorSelect").addEventListener("change", (e) => {
    selectedFloor = e.target.value;
    populateTable();
  });

  // Room & Commercial filter buttons
  const roomButtons = document.querySelectorAll(".room_buttons button");
  roomButtons.forEach((button) => {
    button.addEventListener("click", () => {
      const room = button.getAttribute("data-room");

      if (room === "commercial") {
        if (selectedType === "commercial") {
          selectedType = "all";
          button.classList.remove("active");
        } else {
          selectedType = "commercial";
          button.classList.add("active");
          selectedRooms = [];
          roomButtons.forEach((btn) => {
            if (btn.getAttribute("data-room") !== "commercial") {
              btn.classList.remove("active");
            }
          });
        }
        populateTable();
        return;
      }

      selectedType = "all";
      const commercialBtn = document.querySelector('[data-room="commercial"]');
      if (commercialBtn) commercialBtn.classList.remove("active");

      if (selectedRooms.includes(room)) {
        selectedRooms = selectedRooms.filter((r) => r !== room);
        button.classList.remove("active");
      } else {
        selectedRooms.push(room);
        button.classList.add("active");
      }

      populateTable();
    });
  });

  // Sorting buttons
  const sortableHeaders = document.querySelectorAll(".asc_dsc_btn");
  sortableHeaders.forEach((btn, index) => {
    btn.addEventListener("click", () => {
      const fields = [
        "completion",
        "type",
        "unite_number",
        "floor",
        "room_number",
        "unit_area",
        "loggia",
        "total",
        "discount_price",
        "availability",
      ];

      const field = fields[index];

      if (sortField === field) {
        sortDirection = sortDirection === "asc" ? "desc" : "asc";
      } else {
        sortField = field;
        sortDirection = "asc";
      }

      populateTable();
    });
  });
});

function toggleView() {
  viewAll = !viewAll;
  document.getElementById("toggleButton").innerText = viewAll
    ? "Show Less"
    : `View all apartments ${allApartments.length - 10}`;
  populateTable();
}

function populateTable() {
  const tableBody = document.querySelector("#tableBody");
  tableBody.innerHTML = "";

  let filteredApartments = allApartments.filter((apt) => {
    const aptType = apt.type?.toLowerCase().trim();
    const matchesFloor =
      selectedFloor === "all" || String(apt.floor) === String(selectedFloor);
    const matchesRoom =
      selectedRooms.length === 0 ||
      (apt.room_number !== null &&
        selectedRooms.includes(String(apt.room_number)));
    const matchesType =
      selectedType === "all" || aptType.includes(selectedType.toLowerCase());
    return matchesFloor && matchesRoom && matchesType;
  });

  if (sortField) {
    filteredApartments.sort((a, b) => {
      let aValue = a[sortField];
      let bValue = b[sortField];

      if (typeof aValue === "string") aValue = aValue.toLowerCase();
      if (typeof bValue === "string") bValue = bValue.toLowerCase();

      if (aValue < bValue) return sortDirection === "asc" ? -1 : 1;
      if (aValue > bValue) return sortDirection === "asc" ? 1 : -1;
      return 0;
    });
  }

  const apartmentsToShow = viewAll
    ? filteredApartments
    : filteredApartments.slice(0, 10);

  apartmentsToShow.forEach((apartment, idx) => {
    const row = document.createElement("tr");

    let actionButton = "-";
    if (
      apartment.availability.toLowerCase() === "on sale" ||
      apartment.availability.toLowerCase() === "pre-booked"
    ) {
      actionButton = `<button 
  class="btn btn-sm open-modal-btn" 
  style="background-color: #FFFFFF; color: #1E293B; border: none;" 
  data-availability="${apartment.availability}"
>
  Details
</button>`;
    }

    row.innerHTML = `
      <td class="table_data">${apartment.completion}</td>
      <td class="table_data">${apartment.type}</td>
      <td class="table_data">${apartment.unite_number}</td>
      <td class="table_data">${apartment.floor}</td>
      <td class="table_data">${apartment.room_number ?? "-"}</td>
      <td class="table_data">${apartment.unit_area}</td>
      <td class="table_data">${apartment.loggia}</td>
      <td class="table_data">${apartment.total}</td>
      <td class="table_data">${apartment.discount_price}</td>
      <td class="table_data">${apartment.availability}</td>
      <td class="table_data">${actionButton}</td>
    `;

    tableBody.appendChild(row);
  });

  setupModalButtons();
}

function setupModalButtons() {
  const modalButtons = document.querySelectorAll(".open-modal-btn");

  modalButtons.forEach((button) => {
    button.addEventListener("click", (e) => {
      const availability = e.target
        .getAttribute("data-availability")
        .toLowerCase();

      if (availability === "on sale") {
        openOnSaleModal();
      } else if (availability === "pre-booked") {
        openPreBookedModal();
      }
    });
  });
}

function openOnSaleModal() {
  const modal = new bootstrap.Modal(document.getElementById("onSaleModal"));
  modal.show();
}

function openPreBookedModal() {
  const modal = new bootstrap.Modal(document.getElementById("preBookedModal"));
  modal.show();
}
